% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kv.R
\name{kv}
\alias{kv}
\alias{kv.default}
\title{Key-value iteration}
\usage{
kv(x, ...)

\method{kv}{default}(x, ...)
}
\arguments{
\item{x}{object such as vector or list to separate into key value pairs}

\item{...}{additional arguments for other S3 functions, currently unused.}
}
\value{
A named list-of-lists; each element of \code{x} becomes a one element list
with elements \code{k} and \code{v} representing the keys and value respectively.
}
\description{
Creates a list with \code{k} and \code{v} elements useful for iteration in loops.
}
\details{
No magic here.

\code{kv} converts its argument(\code{x}) into a list-of-lists of key-value pairs
For \strong{each element of \code{x}}, it returns a list with elements \code{k}
and \code{v}:
\code{k} is the key(name) for the element. Missing names are made \code{NULL}
\code{v} is that value of that element.

\code{kv} works for vector and list-like objects including tables.

For many cases, key-value iteration can be done with \code{*apply} or
\code{paste} functions. This is made to be explicit and work on a variery of
objects.

\code{kv} is an S3 generic function.
}
\examples{

  mylist = list( a=1, b=2, c=3)

  for( . in kv(mylist))
    cat( "key is: ", .$k, "| value is:", .$v, "\\n" )

 # Lists
 li <- list(a=1,b=2,c=3)
 kv(li)

 # vectors
 v <- c(a=1, b=2, c=3 )
 kv(li)


}
\references{
\itemize{
\item \href{http://stackoverflow.com/questions/18572921/for-loop-in-r-with-key-value}{SO: for-loop-in-r-with-key-value}
\item \href{http://stackoverflow.com/questions/4500106/iterate-over-key-value-pair-from-a-list}{SO: iterate-over-key-value-pair-from-a-list}
}
}
